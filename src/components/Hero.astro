---
interface Props {
  title: string
  text?: string
  button?: string
  href?: string
  size?: 'sm' | 'md' | 'lg'
  center?: boolean
}

import { GrantCodesButton } from '@grantcodes/ui/components/button/button.component.js'
import { GrantCodesContainer } from '@grantcodes/ui/components/container/container.component.js'

const { title, text, button, href, size, center } = Astro.props

const classes = ['hero']
if (center) {
  classes.push('hero--center')
}
if (size) {
  classes.push(`hero--${size}`)
}
---

<section class={classes.join(' ')}>
  <GrantCodesContainer align={center ? 'center' : 'wide'}>
    <div class="container">
      <h1 class="hero__title">{title}</h1>
      {!!text && <p class="hero__text">{text}</p>}

      {
        href && button && (
          <GrantCodesButton>
            <a href={href}>{button}</a>
          </GrantCodesButton>
        )
      }
    </div>
  </GrantCodesContainer>
</section>

<style>
  .hero {
    display: flex;
    width: 100%;
    justify-content: center;
    align-items: center;
    min-height: 50dvh;
    padding-block: 5rem;
    background-color: var(--color-base-primary-200);
    background: radial-gradient(
      circle at 10% 90%,
      var(--color-base-primary-200),
      var(--color-base-background-main)
    );
    background-size: 100% 200%;
  }

  .hero .container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  .hero--center .container {
    text-align: center;
    align-items: center;
  }

  .hero--sm {
    min-height: 0;
    padding-block: 2rem;
  }

  .hero__title {
    width: fit-content;
    margin-block-start: 0;
    font-weight: 900;
    color: transparent;
    background: linear-gradient(
      84deg,
      var(--color-base-primary-500),
      var(--color-base-secondary-500)
    );
    background-clip: text;
  }
  @media (min-width: 40em) {
    .hero__title {
      font-size: 5rem;
    }
  }
</style>
